// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockApp.Data;

#nullable disable

namespace StockApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250704135329_ModificationDesColonnesTotauxClientsEtFournisseurs")]
    partial class ModificationDesColonnesTotauxClientsEtFournisseurs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockApp.Models.BonCommande", b =>
                {
                    b.Property<int>("NumeroBc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NumeroBC");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroBc"));

                    b.Property<int>("CodeClient")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateBc")
                        .HasColumnType("date")
                        .HasColumnName("DateBC");

                    b.Property<DateOnly?>("DateLivraison")
                        .HasColumnType("date");

                    b.Property<decimal?>("MontantTotal")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("NomClient")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NumeroBc")
                        .HasName("PK__BonComma__C664DCC4FEF37197");

                    b.HasIndex("CodeClient");

                    b.ToTable("BonCommande", (string)null);
                });

            modelBuilder.Entity("StockApp.Models.BonEntree", b =>
                {
                    b.Property<int>("NumeroBe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NumeroBE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroBe"));

                    b.Property<int>("CodeFournisseur")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateBe")
                        .HasColumnType("date")
                        .HasColumnName("DateBE");

                    b.Property<DateOnly?>("DateLivraison")
                        .HasColumnType("date");

                    b.Property<decimal?>("MontantTotal")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("NomFournisseur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NumeroBe")
                        .HasName("PK__BonEntre__C664DCC67DAC2BBA");

                    b.HasIndex("CodeFournisseur");

                    b.ToTable("BonEntree", (string)null);
                });

            modelBuilder.Entity("StockApp.Models.BonLivraisonFacture", b =>
                {
                    b.Property<int>("NumeroBlf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NumeroBLF");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroBlf"));

                    b.Property<int>("CodeClient")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateBlf")
                        .HasColumnType("date")
                        .HasColumnName("DateBLF");

                    b.Property<decimal?>("MontantTotal")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("NomClient")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NumeroBc")
                        .HasColumnType("int")
                        .HasColumnName("NumeroBC");

                    b.HasKey("NumeroBlf")
                        .HasName("PK__BonLivra__E37FEC34C4145BAF");

                    b.HasIndex("CodeClient");

                    b.HasIndex("NumeroBc");

                    b.ToTable("BonLivraisonFacture", (string)null);
                });

            modelBuilder.Entity("StockApp.Models.FicheArticle", b =>
                {
                    b.Property<int>("CodeArticle")
                        .HasColumnType("int")
                        .HasColumnName("CODE_ARTICLE");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DESIGNATION");

                    b.Property<decimal>("PrixUnitaireHorsTaxes")
                        .HasColumnType("decimal(18, 3)")
                        .HasColumnName("PRIX_UNITAIRE_Hors_Taxes");

                    b.Property<decimal>("PrixUnitaireTtc")
                        .HasColumnType("decimal(18, 3)")
                        .HasColumnName("PRIX_UNITAIRE_TTC");

                    b.Property<int>("QuantiteEnStock")
                        .HasColumnType("int")
                        .HasColumnName("QUANTITE_EN_STOCK");

                    b.Property<double>("TauxDeTva")
                        .HasColumnType("float")
                        .HasColumnName("TAUX_DE_TVA");

                    b.HasKey("CodeArticle");

                    b.ToTable("FICHE_ARTICLE", (string)null);
                });

            modelBuilder.Entity("StockApp.Models.FicheClient", b =>
                {
                    b.Property<int>("CodeClient")
                        .HasColumnType("int")
                        .HasColumnName("CODE_CLIENT");

                    b.Property<string>("Adresse")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ADRESSE");

                    b.Property<string>("NomClient")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOM_CLIENT");

                    b.Property<decimal?>("Tel")
                        .HasColumnType("numeric(8, 0)")
                        .HasColumnName("TEL");

                    b.Property<decimal?>("TotalDesVentes")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("TOTAL_DES_VENTES");

                    b.HasKey("CodeClient");

                    b.ToTable("FICHE_CLIENT", (string)null);
                });

            modelBuilder.Entity("StockApp.Models.FicheFournisseur", b =>
                {
                    b.Property<int>("CodeFournisseur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CODE_FOURNISSEUR");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeFournisseur"));

                    b.Property<string>("Adresse")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ADRESSE");

                    b.Property<string>("NomFournisseur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOM_FOURNISSEUR");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TEL");

                    b.Property<decimal?>("TotalDesAchats")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 4)")
                        .HasDefaultValue(0m)
                        .HasColumnName("TOTAL_DES_ACHATS");

                    b.HasKey("CodeFournisseur")
                        .HasName("PK__FICHE_FO__2295BC29A126E020");

                    b.ToTable("FICHE_FOURNISSEUR", (string)null);
                });

            modelBuilder.Entity("StockApp.Models.LigneBonCommande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CodeArticle")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumeroBc")
                        .HasColumnType("int")
                        .HasColumnName("NumeroBC");

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(29, 2)")
                        .HasComputedColumnSql("([Quantite]*[PrixUnitaire])", true);

                    b.HasKey("Id")
                        .HasName("PK__LigneBon__3214EC07A8673453");

                    b.HasIndex("CodeArticle");

                    b.HasIndex("NumeroBc");

                    b.ToTable("LigneBonCommande", (string)null);
                });

            modelBuilder.Entity("StockApp.Models.LigneBonEntree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CodeArticle")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumeroBe")
                        .HasColumnType("int")
                        .HasColumnName("NumeroBE");

                    b.Property<decimal>("PrixUnitaireHT")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("PrixUnitaireTTC")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<decimal>("TauxTVA")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(29, 2)")
                        .HasComputedColumnSql("([Quantite]*[PrixUnitaireTTC])", true);

                    b.HasKey("Id")
                        .HasName("PK__LigneBon__3214EC07DE4B4D75");

                    b.HasIndex("CodeArticle");

                    b.HasIndex("NumeroBe");

                    b.ToTable("LigneBonEntree", (string)null);
                });

            modelBuilder.Entity("StockApp.Models.LigneBonLivraisonFacture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CodeArticle")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumeroBlf")
                        .HasColumnType("int")
                        .HasColumnName("NumeroBLF");

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(29, 2)")
                        .HasComputedColumnSql("([Quantite]*[PrixUnitaire])", true);

                    b.HasKey("Id")
                        .HasName("PK__LigneBon__3214EC0766380865");

                    b.HasIndex("CodeArticle");

                    b.HasIndex("NumeroBlf");

                    b.ToTable("LigneBonLivraisonFacture", (string)null);
                });

            modelBuilder.Entity("StockApp.Models.BonCommande", b =>
                {
                    b.HasOne("StockApp.Models.FicheClient", "CodeClientNavigation")
                        .WithMany("BonCommandes")
                        .HasForeignKey("CodeClient")
                        .IsRequired()
                        .HasConstraintName("FK_BonCommande_FicheClient");

                    b.Navigation("CodeClientNavigation");
                });

            modelBuilder.Entity("StockApp.Models.BonEntree", b =>
                {
                    b.HasOne("StockApp.Models.FicheFournisseur", "CodeFournisseurNavigation")
                        .WithMany("BonEntrees")
                        .HasForeignKey("CodeFournisseur")
                        .IsRequired()
                        .HasConstraintName("FK_BonEntree_FicheFournisseur");

                    b.Navigation("CodeFournisseurNavigation");
                });

            modelBuilder.Entity("StockApp.Models.BonLivraisonFacture", b =>
                {
                    b.HasOne("StockApp.Models.FicheClient", "CodeClientNavigation")
                        .WithMany("BonLivraisonFactures")
                        .HasForeignKey("CodeClient")
                        .IsRequired()
                        .HasConstraintName("FK_BonLivraisonFacture_FicheClient");

                    b.HasOne("StockApp.Models.BonCommande", "NumeroBcNavigation")
                        .WithMany("BonLivraisonFactures")
                        .HasForeignKey("NumeroBc")
                        .HasConstraintName("FK__BonLivrai__Numer__403A8C7D");

                    b.Navigation("CodeClientNavigation");

                    b.Navigation("NumeroBcNavigation");
                });

            modelBuilder.Entity("StockApp.Models.LigneBonCommande", b =>
                {
                    b.HasOne("StockApp.Models.FicheArticle", "CodeArticleNavigation")
                        .WithMany("LigneBonCommandes")
                        .HasForeignKey("CodeArticle")
                        .HasConstraintName("FK_BonCommande2_FicheArticle2");

                    b.HasOne("StockApp.Models.BonCommande", "NumeroBcNavigation")
                        .WithMany("LigneBonCommandes")
                        .HasForeignKey("NumeroBc")
                        .IsRequired()
                        .HasConstraintName("FK__LigneBonC__Numer__3D5E1FD2");

                    b.Navigation("CodeArticleNavigation");

                    b.Navigation("NumeroBcNavigation");
                });

            modelBuilder.Entity("StockApp.Models.LigneBonEntree", b =>
                {
                    b.HasOne("StockApp.Models.FicheArticle", "CodeArticleNavigation")
                        .WithMany("LigneBonEntrees")
                        .HasForeignKey("CodeArticle")
                        .HasConstraintName("FK_BonEntree2_FicheArticle2");

                    b.HasOne("StockApp.Models.BonEntree", "NumeroBeNavigation")
                        .WithMany("LigneBonEntrees")
                        .HasForeignKey("NumeroBe")
                        .IsRequired()
                        .HasConstraintName("FK__LigneBonE__Numer__47DBAE45");

                    b.Navigation("CodeArticleNavigation");

                    b.Navigation("NumeroBeNavigation");
                });

            modelBuilder.Entity("StockApp.Models.LigneBonLivraisonFacture", b =>
                {
                    b.HasOne("StockApp.Models.FicheArticle", "CodeArticleNavigation")
                        .WithMany("LigneBonLivraisonFactures")
                        .HasForeignKey("CodeArticle")
                        .HasConstraintName("FK_BonLivraisonFacture2_FicheArticle2");

                    b.HasOne("StockApp.Models.BonLivraisonFacture", "NumeroBlfNavigation")
                        .WithMany("LigneBonLivraisonFactures")
                        .HasForeignKey("NumeroBlf")
                        .IsRequired()
                        .HasConstraintName("FK__LigneBonL__Numer__4316F928");

                    b.Navigation("CodeArticleNavigation");

                    b.Navigation("NumeroBlfNavigation");
                });

            modelBuilder.Entity("StockApp.Models.BonCommande", b =>
                {
                    b.Navigation("BonLivraisonFactures");

                    b.Navigation("LigneBonCommandes");
                });

            modelBuilder.Entity("StockApp.Models.BonEntree", b =>
                {
                    b.Navigation("LigneBonEntrees");
                });

            modelBuilder.Entity("StockApp.Models.BonLivraisonFacture", b =>
                {
                    b.Navigation("LigneBonLivraisonFactures");
                });

            modelBuilder.Entity("StockApp.Models.FicheArticle", b =>
                {
                    b.Navigation("LigneBonCommandes");

                    b.Navigation("LigneBonEntrees");

                    b.Navigation("LigneBonLivraisonFactures");
                });

            modelBuilder.Entity("StockApp.Models.FicheClient", b =>
                {
                    b.Navigation("BonCommandes");

                    b.Navigation("BonLivraisonFactures");
                });

            modelBuilder.Entity("StockApp.Models.FicheFournisseur", b =>
                {
                    b.Navigation("BonEntrees");
                });
#pragma warning restore 612, 618
        }
    }
}
